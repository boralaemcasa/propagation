SÉRIE DE FOURIER CONTÍNUA
#############

os coeficientes da representacao em serie de Fourier dos seguintes sinais:

x(t) = sum k = -infty to infty, a(k) exp(j * k * omega0 * t)

# a(k) = 1/T0 * integrate x(t) * exp(-i*k*omega0*t) dt from 0 to T0

sinc(u) = sin(pi*u)/pi/u

# no wolfram alpha, sinc(x) = sin(x)/x, u(x) = theta(x)

########

Linearidade

1) z(t) = A x(t) + B y(t)
   c_k = A a_k + B b_k

Deslocamento no tempo

2) y(t) = x(t - t0)
   b_k = exp(- j * k * omega0 * t0) * a_k

Deslocamento na frequência

3) y(t) = exp(j*M*omega0*t)
   b_k = a_[k - M]

Conjugação

4) y(t) = conjugate(x(t))
   b_k = conjugate(a(-k))

Reflexão no tempo

5) y(t) = x(-t)
   b_k = a(-k)

Escalonamento

6) y(t) = x(alpha * t) = sum k = -infty to infty, a(k) exp(j * k * (alpha * omega0) * t)
   b_k = a_k
   omega1 = alpha * omega0
   T1 = 2*pi/omega1 = 2*pi/alpha/omega0 = T0/alpha

Convolução

7) z(t) = x(t) ** y(t) = integral x(tau) y(t - tau) dtau
   c_k = T0 * a_k b_k

Multiplicação / Modulação

8) z(t) = x(t) y(t)
   c_k = a_k ** b_k = sum L=-infty to infty, a[L] b[k - L]

Diferenciação no tempo

9) y(t) = x'(t)
   b_k = j*k*omega0 * a_k

Diferenciação na frequência

10) \emptyset

Integração

11) y(t) = integrate x(t) dt from -infty to t
    b_k = 1/j/k/omega0 * a_k

Sinais reais e pares

12) x(t) real e par
    a_k real e par

Sinais reais e ímpares

13) x(t) real e ímpar
    a_k puramente imaginário e ímpar

Relações de Parseval

14) 1/T0 * integrate abs(x(t))^2 dt from 0 to T0 = sum k = -infty to infty, abs(a(k))^2

Dualidade

15) \emptyset

############

2) dado a(k) e ômega, retornar x(t).

a_-2 = -1/4
a_0 = 1/2
a_2 = -1/4
resto 0
x(t) = sum a(k) exp(j * k * omega0 * t)
     =  -1/4 exp(-2 j * omega0 * t) + 1/2 -1/4 exp(2j * omega0 * t)

     = sin^2(t omega0)

#################

1)

T0 = 2 pi

# a(k) = 1/2/pi * integrate exp(-i*k*t) dt from (-pi/2) to (pi/2)

= Sin[(k Pi)/2]/(k Pi) com a(0) = 1/2

#################

3) teste8.jpg

T0 = 2

# a(k) = 1/2 * integrate exp(-t) * exp(-i*k*pi*t) dt from 0 to 1

= (I - I E^(-1 - I k Pi))/(2 (I - k Pi))
= (1 - E^(-1 - I k Pi))/(2 (1 + i k Pi))

#################

4)
a_0 = 1
a_±1 = 1/4
a_±2 = 1/2
a_±3 = 1/3
resto 0
x(t) = sum a(k) exp(j * k * omega0 * t)
     = 1 + 1/2 cos(t w) + cos(2 t w) + 2/3 cos(3 t w)

#################

5)

T0 = 2*pi

# a(k) = 1/2/pi * (integrate t/pi * exp(-i*k*t) dt from 0 to pi + integrate (2-t/pi) * exp(-i*k*t) dt from pi to (2*pi))

  = e^(-i pi k) (1 - cos(pi k))/(pi^2 k^2)  versus  exp(-i*k*pi)/2 * sinc^2(k * pi/2)
     1 - cos(pi k)  versus  2 * sin^2(k * pi/2)

Reduce[1 - cos(pi k)  = 2 * sin^2(k * pi/2), k, Integers]

"all values of k are solutions" e a(0) = 1/2

######################################

2)

T0 = 2

x(t) = sum k = -infty to infty, a(k) exp(j * k * pi * t)

# a(k) = 1/2 * (integrate 4 * exp(-i*k*pi*t) dt from 0 to 1 + integrate -4 * exp(-i*k*pi*t) dt from 1 to 2)

= -(2 i e^(-2 i pi k) (-1 + e^(i pi k))^2)/(pi k)
versus

-4*i/k/pi * (1 - cos(k*pi)) e a(0) = 0

#################

1)

x(t) = 1 + 1/2 * cos(2*pi*t) + cos(4*pi*t) + 2/3 * cos(6*pi*t)

T0 = 1

w0 = 2*pi

# a(k) = integrate (1 + 1/2 * cos(2*pi*t) + cos(4*pi*t) + 2/3 * cos(6*pi*t)) * exp(-i*k*2*pi*t) dt from 0 to 1

 = ((-216 + 472 k^2 - 203 k^4 + 19 k^6) Sin[k Pi])/(6 E^(I k Pi) k (-36 + k^2 (-7 + k^2)^2) Pi)

k = 0 => 1
k = ±1 => 1/4
k = ±2 => 1/2
k = ±3 => 1/3
|k| >= 4 => 0

#################

2)

a_-3 = i/2
a_-1 = i*exp(3i)
a_1 = -i*exp(-3i)
a_3 = -i/2
resto 0
x(t) = sum a(k) exp(j * k * omega0 * t)
     = i/2 exp(-3i * w * t) + i*exp(3i) exp(-i * w * t) - i*exp(-3i) exp(i * w * t) - i/2 exp(3i * w * t)

	 = sin(3 t w) - 2 sin(3 - t w)

#################

G <- function(t, T) {
   return (u(t + T/2) - u(t - T/2))
}

1e) x(t) = sum k = -infty to infty, p(t - k*5)
    p(t) = u(t + 1) - 2 u(t) + u(t - 1)

	T0 = 5
    a(k) = 1/5 * integrate exp(-i*k*2 pi*t/5) dt from -1 to 0
	     - 1/5 * integrate exp(-i*k*2 pi*t/5) dt from 0 to 1
    a(k) = sin((2 pi k)/5)/(2 pi k) + (i sin^2((pi k)/5))/(pi k) -sin((2 pi k)/5)/(2 pi k) + (i sin^2((pi k)/5))/(pi k)
	     = 2 i sin^2((pi k)/5)/(pi k)
	a(0) = 0

1f) x(t) = sum k = -infty to infty, p(t - k*8)
    p(t) = (delta(t + 1) + delta(t - 1))/2

    T0 = 8
    a(k) = 1/8 * integrate x(t) * exp(-i*k*2 pi*t/8) dt from 0 to 8
	     = 1/16 * [exp(+i*k*2 pi/8) + exp(-i*k*2 pi/8)] = 1/8 cos(pi k/4)

1g) x(t) = sum k = -infty to infty, G(t - k*8, 2)

	T0 = 8
	G(t, 2) = u(t + 1) - u(t - 1)
	a(k) = 1/8 * integrate exp(-i*k*2 pi*t/8) dt from -1 to 1
	     = sin(pi k/4)/(pi k) = 4 sinc(pi k/4)

1h) x(t) = sum k = -infty to infty, q(t - k*8)
    q(t) = (u(t+2) - u(t + 1)) * (t + 2) + (u(t+1) - u(t - 1)) * (-t) + (u(t-1) - u(t - 2)) * (t - 2)

	T0 = 8
	a(k) = 1/8 * integrate (t + 2) * exp(-i*k*2 pi/8*t) dt from -2 to -1
	     + 1/8 * integrate (-t) * exp(-i*k*2 pi/8*t) dt from -1 to 1
		 + 1/8 * integrate (t - 2) * exp(-i*k*2 pi/8*t) dt from 1 to 2
		 = e^((i pi k)/4 (i pi k - 4 e^((i pi k)/4) + 4))/(2 pi^2 k^2)
		  - i (pi k cos((pi k)/4) - 4 sin((pi k)/4))/(pi^2 k^2)
		  + e^(-1/2 i pi k) (4 + e^((i pi k)/4) (-4 + i pi k))/(2 pi^2 k^2)
	a(k) = (pi k sin((pi k)/4) - 4 cos((pi k)/4) + 4 cos((pi k)/2) + e^(-1/4 pi k (pi k - 4 sin((pi k)/4))) cos(pi k (cos((pi k)/4) - 1)))/(2 pi^2 k^2) + (i (e^(-1/4 pi k (pi k - 4 sin((pi k)/4))) sin(2 pi k sin^2((pi k)/8)) + 12 sin((pi k)/4) - 4 sin((pi k)/2) + pi (-k) cos((pi k)/4)))/(2 pi^2 k^2)

1i) x(t) = sum k = -infty to infty, P(t - k*6)
    p(t) = -t * G(t + 0.5, 1) + (t - 1) * G(t - 0.5, 1)
         = -t * (u(t + 0.5 + 1/2) - u(t + 0.5 - 1/2)) + (t - 1) * (u(t - 0.5 + 1/2) - u(t - 0.5 - 1/2))

	T0 = 6
	a(k) = 1/6 * integrate (-t) * exp(-i*k*2 pi/6*t) dt from -1 to 0
	     + 1/6 * integrate (t - 1) * exp(-i*k*2 pi/6*t) dt from 0 to 1
		 = (-9 + e^((i pi k)/3) (9 - 3 i pi k))/(6 pi^2 k^2)
		 + (3 i pi k + 9 e^(-1/3 i pi k) - 9)/(6 pi^2 k^2)
	a(k) = (pi k sin(pi k/3) + 6 cos(pi k/3) - 6)/(2 pi^2 k^2) + i sin^2(pi k/6)/(pi k)
